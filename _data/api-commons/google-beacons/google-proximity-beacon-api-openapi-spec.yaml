
  swagger: "2.0"
info:
  title: Google Proximity Beacon
  description: Registers, manages, indexes, and searches beacons.
  contact:
    name: Google
    url: https://google.com
  version: v1beta1
host: proximitybeacon.googleapis.com
basePath: /
schemes:
- http
produces:
- application/json
consumes:
- application/json
paths:
  /v1beta1/beaconinfo:getforobserved:
    post:
      summary: Get Observed Beacon Info
      description: |-
        Given one or more beacon observations, returns any beacon information
        and attachments accessible to your application
      operationId: proximitybeacon.beaconinfo.getforobserved
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      responses:
        200:
          description: OK
      tags:
      - Beacon
  /v1beta1/beacons:
    get:
      summary: Search Beacons
      description: |-
        Searches the beacon registry for beacons that match the given search
        criteria
      operationId: proximitybeacon.beacons.list
      parameters:
      - in: query
        name: pageSize
        description: |-
          The maximum number of records to return for this request, up to a
          server-defined upper limit
      - in: query
        name: pageToken
        description: A pagination token obtained from a previous request to list beacons
      - in: query
        name: projectId
        description: The project id to list beacons under
      - in: query
        name: q
        description: |-
          Filter query string that supports the following field filters:

          * **description:`"<string>"`**
            For example: **description:"Room 3"**
            Returns beacons whose description matches tokens in the string "Room 3"
            (not necessarily that exact string)
      responses:
        200:
          description: OK
      tags:
      - Beacon
  /v1beta1/beacons:register:
    post:
      summary: Register Beacon
      description: Registers a previously unregistered beacon given its `advertisedId`
      operationId: proximitybeacon.beacons.register
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: query
        name: projectId
        description: The project id of the project the beacon will be registered to
      responses:
        200:
          description: OK
      tags:
      - Beacon
  /v1beta1/eidparams:
    get:
      summary: Get Beacon Parameters
      description: |-
        Gets the Proximity Beacon API's current public key and associated
        parameters used to initiate the Diffie-Hellman key exchange required to
        register a beacon that broadcasts the Eddystone-EID format
      operationId: proximitybeacon.getEidparams
      responses:
        200:
          description: OK
      tags:
      - Beacon
  /v1beta1/namespaces:
    get:
      summary: Get Namespace
      description: |-
        Lists all attachment namespaces owned by your Google Developers Console
        project
      operationId: proximitybeacon.namespaces.list
      parameters:
      - in: query
        name: projectId
        description: The project id to list namespaces under
      responses:
        200:
          description: OK
      tags:
      - Namespace
  /v1beta1/{attachmentName}:
    delete:
      summary: Delete Attachment
      description: Deletes the specified attachment for the given beacon
      operationId: proximitybeacon.beacons.attachments.delete
      parameters:
      - in: path
        name: attachmentName
        description: |-
          The attachment name (`attachmentName`) of
          the attachment to remove
      - in: query
        name: projectId
        description: The project id of the attachment to delete
      responses:
        200:
          description: OK
      tags:
      - Attachment
  /v1beta1/{beaconName}:
    delete:
      summary: Delete Beacon
      description: |-
        Deletes the specified beacon including all diagnostics data for the beacon
        as well as any attachments on the beacon (including those belonging to
        other projects)
      operationId: proximitybeacon.beacons.delete
      parameters:
      - in: path
        name: beaconName
        description: Beacon that should be deleted
      - in: query
        name: projectId
        description: The project id of the beacon to delete
      responses:
        200:
          description: OK
      tags:
      - Beacon
    get:
      summary: Get Beacon
      description: Returns detailed information about the specified beacon
      operationId: proximitybeacon.beacons.get
      parameters:
      - in: path
        name: beaconName
        description: Resource name of this beacon
      - in: query
        name: projectId
        description: The project id of the beacon to request
      responses:
        200:
          description: OK
      tags:
      - Beacon
    put:
      summary: Update Beacon
      description: Updates the information about the specified beacon
      operationId: proximitybeacon.beacons.update
      parameters:
      - in: path
        name: beaconName
        description: Resource name of this beacon
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: query
        name: projectId
        description: The project id of the beacon to update
      responses:
        200:
          description: OK
      tags:
      - Beacon
  /v1beta1/{beaconName}/attachments:
    get:
      summary: Get Attachments
      description: |-
        Returns the attachments for the specified beacon that match the specified
        namespaced-type pattern
      operationId: proximitybeacon.beacons.attachments.list
      parameters:
      - in: path
        name: beaconName
        description: Beacon whose attachments should be fetched
      - in: query
        name: namespacedType
        description: |-
          Specifies the namespace and type of attachment to include in response in
          <var>namespace/type</var> format
      - in: query
        name: projectId
        description: The project id to list beacon attachments under
      responses:
        200:
          description: OK
      tags:
      - Attachment
    post:
      summary: Add Attachment
      description: Associates the given data with the specified beacon
      operationId: proximitybeacon.beacons.attachments.create
      parameters:
      - in: path
        name: beaconName
        description: Beacon on which the attachment should be created
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: query
        name: projectId
        description: The project id of the project the attachment will belong to
      responses:
        200:
          description: OK
      tags:
      - Attachment
  /v1beta1/{beaconName}/attachments:batchDelete:
    post:
      summary: Delete Attachments
      description: Deletes multiple attachments on a given beacon
      operationId: proximitybeacon.beacons.attachments.batchDelete
      parameters:
      - in: path
        name: beaconName
        description: The beacon whose attachments should be deleted
      - in: query
        name: namespacedType
        description: |-
          Specifies the namespace and type of attachments to delete in
          `namespace/type` format
      - in: query
        name: projectId
        description: The project id to delete beacon attachments under
      responses:
        200:
          description: OK
      tags:
      - Attachment
  /v1beta1/{beaconName}/diagnostics:
    get:
      summary: Get Diagnostics
      description: List the diagnostics for a single beacon
      operationId: proximitybeacon.beacons.diagnostics.list
      parameters:
      - in: query
        name: alertFilter
        description: Requests only beacons that have the given alert
      - in: path
        name: beaconName
        description: Beacon that the diagnostics are for
      - in: query
        name: pageSize
        description: Specifies the maximum number of results to return
      - in: query
        name: pageToken
        description: |-
          Requests results that occur after the `page_token`, obtained from the
          response to a previous request
      - in: query
        name: projectId
        description: Requests only diagnostic records for the given project id
      responses:
        200:
          description: OK
      tags:
      - Diagnostic
  /v1beta1/{beaconName}:activate:
    post:
      summary: Activate Beacon
      description: Activates a beacon
      operationId: proximitybeacon.beacons.activate
      parameters:
      - in: path
        name: beaconName
        description: Beacon that should be activated
      - in: query
        name: projectId
        description: The project id of the beacon to activate
      responses:
        200:
          description: OK
      tags:
      - Beacon
  /v1beta1/{beaconName}:deactivate:
    post:
      summary: Deactivate Beacon
      description: Deactivates a beacon
      operationId: proximitybeacon.beacons.deactivate
      parameters:
      - in: path
        name: beaconName
        description: Beacon that should be deactivated
      - in: query
        name: projectId
        description: The project id of the beacon to deactivate
      responses:
        200:
          description: OK
      tags:
      - Beacon
  /v1beta1/{beaconName}:decommission:
    post:
      summary: Decomission Beacon
      description: Decommissions the specified beacon in the service
      operationId: proximitybeacon.beacons.decommission
      parameters:
      - in: path
        name: beaconName
        description: Beacon that should be decommissioned
      - in: query
        name: projectId
        description: The project id of the beacon to decommission
      responses:
        200:
          description: OK
      tags:
      - Beacon
  /v1beta1/{namespaceName}:
    put:
      summary: Update Namespace
      description: Updates the information about the specified namespace
      operationId: proximitybeacon.namespaces.update
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: namespaceName
        description: Resource name of this namespace
      - in: query
        name: projectId
        description: The project id of the namespace to update
      responses:
        200:
          description: OK
      tags:
      - Namespace
definitions:
  AdvertisedId:
    properties:
      id:
        description: This is a default description.
        type: put
      type:
        description: This is a default description.
        type: put
  AttachmentInfo:
    properties:
      data:
        description: This is a default description.
        type: put
      namespacedType:
        description: This is a default description.
        type: put
  Beacon:
    properties:
      beaconName:
        description: This is a default description.
        type: put
      description:
        description: This is a default description.
        type: put
      expectedStability:
        description: This is a default description.
        type: put
      placeId:
        description: This is a default description.
        type: put
      properties:
        description: This is a default description.
        type: put
      provisioningKey:
        description: This is a default description.
        type: put
      status:
        description: This is a default description.
        type: put
  BeaconAttachment:
    properties:
      attachmentName:
        description: This is a default description.
        type: put
      creationTimeMs:
        description: This is a default description.
        type: put
      data:
        description: This is a default description.
        type: put
      namespacedType:
        description: This is a default description.
        type: put
  BeaconInfo:
    properties:
      attachments:
        description: This is a default description.
        type: put
      beaconName:
        description: This is a default description.
        type: put
  Date:
    properties:
      day:
        description: This is a default description.
        type: put
      month:
        description: This is a default description.
        type: put
      year:
        description: This is a default description.
        type: put
  DeleteAttachmentsResponse:
    properties:
      numDeleted:
        description: This is a default description.
        type: put
  Diagnostics:
    properties:
      alerts:
        description: This is a default description.
        type: put
      beaconName:
        description: This is a default description.
        type: put
  Empty:
    properties: []
  EphemeralIdRegistration:
    properties:
      beaconEcdhPublicKey:
        description: This is a default description.
        type: put
      beaconIdentityKey:
        description: This is a default description.
        type: put
      initialClockValue:
        description: This is a default description.
        type: put
      initialEid:
        description: This is a default description.
        type: put
      rotationPeriodExponent:
        description: This is a default description.
        type: put
      serviceEcdhPublicKey:
        description: This is a default description.
        type: put
  EphemeralIdRegistrationParams:
    properties:
      maxRotationPeriodExponent:
        description: This is a default description.
        type: put
      minRotationPeriodExponent:
        description: This is a default description.
        type: put
      serviceEcdhPublicKey:
        description: This is a default description.
        type: put
  GetInfoForObservedBeaconsRequest:
    properties:
      namespacedTypes:
        description: This is a default description.
        type: put
      observations:
        description: This is a default description.
        type: put
  GetInfoForObservedBeaconsResponse:
    properties:
      beacons:
        description: This is a default description.
        type: put
  IndoorLevel:
    properties:
      name:
        description: This is a default description.
        type: put
  LatLng:
    properties:
      latitude:
        description: This is a default description.
        type: put
      longitude:
        description: This is a default description.
        type: put
  ListBeaconAttachmentsResponse:
    properties:
      attachments:
        description: This is a default description.
        type: put
  ListBeaconsResponse:
    properties:
      beacons:
        description: This is a default description.
        type: put
      nextPageToken:
        description: This is a default description.
        type: put
      totalCount:
        description: This is a default description.
        type: put
  ListDiagnosticsResponse:
    properties:
      diagnostics:
        description: This is a default description.
        type: put
      nextPageToken:
        description: This is a default description.
        type: put
  ListNamespacesResponse:
    properties:
      namespaces:
        description: This is a default description.
        type: put
  Namespace:
    properties:
      namespaceName:
        description: This is a default description.
        type: put
      servingVisibility:
        description: This is a default description.
        type: put
  Observation:
    properties:
      telemetry:
        description: This is a default description.
        type: put
      timestampMs:
        description: This is a default description.
        type: put