swagger: "2.0"
info:
  title: Compute Engine
  description: Creates and runs virtual machines on Google Cloud Platform.
  contact:
    name: Google
    url: https://google.com
  version: v1
host: www.googleapis.com
basePath: /compute/v1/projects
schemes:
- http
produces:
- application/json
consumes:
- application/json
paths:
  /{project}:
    get:
      summary: Get Project
      description: Returns the specified Project resource
      operationId: compute.projects.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Project
  /{project}/aggregated/addresses:
    get:
      summary: Get Addresses
      description: Retrieves an aggregated list of addresses
      operationId: compute.addresses.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Address
  /{project}/aggregated/autoscalers:
    get:
      summary: Get Autoscalers
      description: Retrieves an aggregated list of autoscalers
      operationId: compute.autoscalers.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
  /{project}/aggregated/backendServices:
    get:
      summary: Get Backend services
      description: Retrieves the list of all BackendService resources, regional and
        global, available to the specified project
      operationId: compute.backendServices.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Name of the project scoping this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
  /{project}/aggregated/disks:
    get:
      summary: Get Disks
      description: Retrieves an aggregated list of persistent disks
      operationId: compute.disks.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
  /{project}/aggregated/diskTypes:
    get:
      summary: Get Disk Type
      description: Retrieves an aggregated list of disk types
      operationId: compute.diskTypes.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
  /{project}/aggregated/forwardingRules:
    get:
      summary: Get Forwarding Rules
      description: Retrieves an aggregated list of forwarding rules
      operationId: compute.forwardingRules.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Forwarding Rules
  /{project}/aggregated/instanceGroupManagers:
    get:
      summary: Get Instance Group Managers
      description: Retrieves the list of managed instance groups and groups them by
        zone
      operationId: compute.instanceGroupManagers.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/aggregated/instanceGroups:
    get:
      summary: Get Instance Groups
      description: Retrieves the list of instance groups and sorts them by zone
      operationId: compute.instanceGroups.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/aggregated/instances:
    get:
      summary: Get Instances
      description: Retrieves aggregated list of instances
      operationId: compute.instances.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/aggregated/machineTypes:
    get:
      summary: Get Machine Types
      description: Retrieves an aggregated list of machine types
      operationId: compute.machineTypes.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Machine
  /{project}/aggregated/operations:
    get:
      summary: Get Operations
      description: Retrieves an aggregated list of all operations
      operationId: compute.globalOperations.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Operation
  /{project}/aggregated/routers:
    get:
      summary: Get Routers
      description: Retrieves an aggregated list of routers
      operationId: compute.routers.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Router
  /{project}/aggregated/subnetworks:
    get:
      summary: Get Subnetworks
      description: Retrieves an aggregated list of subnetworks
      operationId: compute.subnetworks.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Subnetwork
  /{project}/aggregated/targetInstances:
    get:
      summary: Get Target Instances
      description: Retrieves an aggregated list of target instances
      operationId: compute.targetInstances.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Target Instance
  /{project}/aggregated/targetPools:
    get:
      summary: Get Target Pools
      description: Retrieves an aggregated list of target pools
      operationId: compute.targetPools.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Target Pools
  /{project}/aggregated/targetVpnGateways:
    get:
      summary: Get Target VPN Gateways
      description: Retrieves an aggregated list of target VPN gateways
      operationId: compute.targetVpnGateways.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Target VPN Gateway
  /{project}/aggregated/vpnTunnels:
    get:
      summary: Get VPN Tunnels
      description: Retrieves an aggregated list of VPN tunnels
      operationId: compute.vpnTunnels.aggregatedList
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - VPN Tunnel
  /{project}/global/addresses:
    get:
      summary: Get Global Addreses
      description: Retrieves a list of global addresses
      operationId: compute.globalAddresses.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Address
    post:
      summary: Add Address
      description: Creates an address resource in the specified project using the
        data included in the request
      operationId: compute.globalAddresses.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Address
  /{project}/global/addresses/{address}:
    delete:
      summary: Delete Address
      description: Deletes the specified address resource
      operationId: compute.globalAddresses.delete
      parameters:
      - in: path
        name: address
        description: Name of the address resource to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Address
    get:
      summary: Get Address
      description: Returns the specified address resource
      operationId: compute.globalAddresses.get
      parameters:
      - in: path
        name: address
        description: Name of the address resource to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Address
  /{project}/global/backendBuckets:
    get:
      summary: Get Backend Buckets
      description: Retrieves the list of BackendBucket resources available to the
        specified project
      operationId: compute.backendBuckets.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Bucket
    post:
      summary: Create Backend Buckets
      description: Creates a BackendBucket resource in the specified project using
        the data included in the request
      operationId: compute.backendBuckets.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Bucket
  /{project}/global/backendBuckets/{backendBucket}:
    delete:
      summary: Delete Backend Bucket
      description: Deletes the specified BackendBucket resource
      operationId: compute.backendBuckets.delete
      parameters:
      - in: path
        name: backendBucket
        description: Name of the BackendBucket resource to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Bucket
    get:
      summary: Create Backend Bucket
      description: Returns the specified BackendBucket resource
      operationId: compute.backendBuckets.get
      parameters:
      - in: path
        name: backendBucket
        description: Name of the BackendBucket resource to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Bucket
    patch:
      summary: Update Backend Bucket
      description: Updates the specified BackendBucket resource with the data included
        in the request
      operationId: compute.backendBuckets.patch
      parameters:
      - in: path
        name: backendBucket
        description: Name of the BackendBucket resource to update
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Bucket
    put:
      summary: Update Backend Bucket
      description: Updates the specified BackendBucket resource with the data included
        in the request
      operationId: compute.backendBuckets.update
      parameters:
      - in: path
        name: backendBucket
        description: Name of the BackendBucket resource to update
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Bucket
  /{project}/global/backendServices:
    get:
      summary: Get Backend Services
      description: Retrieves the list of BackendService resources available to the
        specified project
      operationId: compute.backendServices.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
    post:
      summary: Create Backend Service
      description: Creates a BackendService resource in the specified project using
        the data included in the request
      operationId: compute.backendServices.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
  /{project}/global/backendServices/{backendService}:
    delete:
      summary: Delete Backend Service
      description: Deletes the specified BackendService resource
      operationId: compute.backendServices.delete
      parameters:
      - in: path
        name: backendService
        description: Name of the BackendService resource to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
    get:
      summary: Get Backend Service
      description: Returns the specified BackendService resource
      operationId: compute.backendServices.get
      parameters:
      - in: path
        name: backendService
        description: Name of the BackendService resource to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
    patch:
      summary: Update Backend Service
      description: Updates the specified BackendService resource with the data included
        in the request
      operationId: compute.backendServices.patch
      parameters:
      - in: path
        name: backendService
        description: Name of the BackendService resource to update
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
    put:
      summary: Update Backend Service
      description: Updates the specified BackendService resource with the data included
        in the request
      operationId: compute.backendServices.update
      parameters:
      - in: path
        name: backendService
        description: Name of the BackendService resource to update
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
  /{project}/global/backendServices/{backendService}/getHealth:
    post:
      summary: Get Backend Service Health Check
      description: Gets the most recent health check results for this BackendService
      operationId: compute.backendServices.getHealth
      parameters:
      - in: path
        name: backendService
        description: Name of the BackendService resource to which the queried instance
          belongs
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
      responses:
        200:
          description: OK
      tags:
      - Backend Service
  /{project}/global/firewalls:
    get:
      summary: Get Firewalls
      description: Retrieves the list of firewall rules available to the specified
        project
      operationId: compute.firewalls.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Firewall
    post:
      summary: Create Firewall
      description: Creates a firewall rule in the specified project using the data
        included in the request
      operationId: compute.firewalls.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Firewall
  /{project}/global/firewalls/{firewall}:
    delete:
      summary: Delete Firewall
      description: Deletes the specified firewall
      operationId: compute.firewalls.delete
      parameters:
      - in: path
        name: firewall
        description: Name of the firewall rule to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Firewall
    get:
      summary: Get Firewall
      description: Returns the specified firewall
      operationId: compute.firewalls.get
      parameters:
      - in: path
        name: firewall
        description: Name of the firewall rule to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Firewall
    patch:
      summary: Update Firewall
      description: Updates the specified firewall rule with the data included in the
        request
      operationId: compute.firewalls.patch
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: firewall
        description: Name of the firewall rule to update
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Firewall
    put:
      summary: Update Firewall
      description: Updates the specified firewall rule with the data included in the
        request
      operationId: compute.firewalls.update
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: firewall
        description: Name of the firewall rule to update
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Firewall
  /{project}/global/forwardingRules:
    get:
      summary: Get Forwarding Rules
      description: Retrieves a list of ForwardingRule resources available to the specified
        project
      operationId: compute.globalForwardingRules.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Forward Rule
    post:
      summary: Create Forwarding Rule
      description: Creates a ForwardingRule resource in the specified project and
        region using the data included in the request
      operationId: compute.globalForwardingRules.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Forward Rule
  /{project}/global/forwardingRules/{forwardingRule}:
    delete:
      summary: Delete Forwarding Rule
      description: Deletes the specified ForwardingRule resource
      operationId: compute.globalForwardingRules.delete
      parameters:
      - in: path
        name: forwardingRule
        description: Name of the ForwardingRule resource to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Forward Rule
    get:
      summary: Get Forwarding Rule
      description: Returns the specified ForwardingRule resource
      operationId: compute.globalForwardingRules.get
      parameters:
      - in: path
        name: forwardingRule
        description: Name of the ForwardingRule resource to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Forward Rule
  /{project}/global/forwardingRules/{forwardingRule}/setTarget:
    post:
      summary: Update Forwarding Rule
      description: Changes target URL for forwarding rule
      operationId: compute.globalForwardingRules.setTarget
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: forwardingRule
        description: Name of the ForwardingRule resource in which target is to be
          set
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Forward Rule
  /{project}/global/healthChecks:
    get:
      summary: Get Health Checks
      description: Retrieves the list of HealthCheck resources available to the specified
        project
      operationId: compute.healthChecks.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    post:
      summary: Create Health Check
      description: Creates a HealthCheck resource in the specified project using the
        data included in the request
      operationId: compute.healthChecks.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
  /{project}/global/healthChecks/{healthCheck}:
    delete:
      summary: Delete Health Check
      description: Deletes the specified HealthCheck resource
      operationId: compute.healthChecks.delete
      parameters:
      - in: path
        name: healthCheck
        description: Name of the HealthCheck resource to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    get:
      summary: Get Health Check
      description: Returns the specified HealthCheck resource
      operationId: compute.healthChecks.get
      parameters:
      - in: path
        name: healthCheck
        description: Name of the HealthCheck resource to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    patch:
      summary: Update Health Check
      description: Updates a HealthCheck resource in the specified project using the
        data included in the request
      operationId: compute.healthChecks.patch
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: healthCheck
        description: Name of the HealthCheck resource to update
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    put:
      summary: Update Health Check
      description: Updates a HealthCheck resource in the specified project using the
        data included in the request
      operationId: compute.healthChecks.update
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: healthCheck
        description: Name of the HealthCheck resource to update
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
  /{project}/global/httpHealthChecks:
    get:
      summary: Get HTTP Health Checks
      description: Retrieves the list of HttpHealthCheck resources available to the
        specified project
      operationId: compute.httpHealthChecks.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    post:
      summary: Create HTTP Health Check
      description: Creates a HttpHealthCheck resource in the specified project using
        the data included in the request
      operationId: compute.httpHealthChecks.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
  /{project}/global/httpHealthChecks/{httpHealthCheck}:
    delete:
      summary: Delete HTTP Health Check
      description: Deletes the specified HttpHealthCheck resource
      operationId: compute.httpHealthChecks.delete
      parameters:
      - in: path
        name: httpHealthCheck
        description: Name of the HttpHealthCheck resource to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    get:
      summary: Create HTTP Health Check
      description: Returns the specified HttpHealthCheck resource
      operationId: compute.httpHealthChecks.get
      parameters:
      - in: path
        name: httpHealthCheck
        description: Name of the HttpHealthCheck resource to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    patch:
      summary: Update HTTP Health Check
      description: Updates a HttpHealthCheck resource in the specified project using
        the data included in the request
      operationId: compute.httpHealthChecks.patch
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: httpHealthCheck
        description: Name of the HttpHealthCheck resource to update
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    put:
      summary: Update HTTP Health Check
      description: Updates a HttpHealthCheck resource in the specified project using
        the data included in the request
      operationId: compute.httpHealthChecks.update
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: httpHealthCheck
        description: Name of the HttpHealthCheck resource to update
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
  /{project}/global/httpsHealthChecks:
    get:
      summary: Get HTTPS Health Checks
      description: Retrieves the list of HttpsHealthCheck resources available to the
        specified project
      operationId: compute.httpsHealthChecks.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    post:
      summary: Create HTTPS Health Check
      description: Creates a HttpsHealthCheck resource in the specified project using
        the data included in the request
      operationId: compute.httpsHealthChecks.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
  /{project}/global/httpsHealthChecks/{httpsHealthCheck}:
    delete:
      summary: Delete HTTPS Health Check
      description: Deletes the specified HttpsHealthCheck resource
      operationId: compute.httpsHealthChecks.delete
      parameters:
      - in: path
        name: httpsHealthCheck
        description: Name of the HttpsHealthCheck resource to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    get:
      summary: Get HTTPS Health Check
      description: Returns the specified HttpsHealthCheck resource
      operationId: compute.httpsHealthChecks.get
      parameters:
      - in: path
        name: httpsHealthCheck
        description: Name of the HttpsHealthCheck resource to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    patch:
      summary: Update HTTPS Health Check
      description: Updates a HttpsHealthCheck resource in the specified project using
        the data included in the request
      operationId: compute.httpsHealthChecks.patch
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: httpsHealthCheck
        description: Name of the HttpsHealthCheck resource to update
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
    put:
      summary: Update HTTPS Health Check
      description: Updates a HttpsHealthCheck resource in the specified project using
        the data included in the request
      operationId: compute.httpsHealthChecks.update
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: httpsHealthCheck
        description: Name of the HttpsHealthCheck resource to update
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Health Check
  /{project}/global/images:
    get:
      summary: Get Images
      description: Retrieves the list of private images available to the specified
        project
      operationId: compute.images.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Image
    post:
      summary: Create Image
      description: Creates an image in the specified project using the data included
        in the request
      operationId: compute.images.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Image
  /{project}/global/images/family/{family}:
    get:
      summary: Create Image Family
      description: Returns the latest image that is part of an image family and is
        not deprecated
      operationId: compute.images.getFromFamily
      parameters:
      - in: path
        name: family
        description: Name of the image family to search for
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Image
  /{project}/global/images/{image}:
    delete:
      summary: Delete Image
      description: Deletes the specified image
      operationId: compute.images.delete
      parameters:
      - in: path
        name: image
        description: Name of the image resource to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Image
    get:
      summary: Get Image
      description: Returns the specified image
      operationId: compute.images.get
      parameters:
      - in: path
        name: image
        description: Name of the image resource to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Image
  /{project}/global/images/{image}/deprecate:
    post:
      summary: Deprecate Image
      description: Sets the deprecation status of an image
      operationId: compute.images.deprecate
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: image
        description: Image name
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Image
  /{project}/global/instanceTemplates:
    get:
      summary: Get Instance Templates
      description: Retrieves a list of instance templates that are contained within
        the specified project and zone
      operationId: compute.instanceTemplates.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Instance Template
    post:
      summary: Create Instance Template
      description: Creates an instance template in the specified project using the
        data that is included in the request
      operationId: compute.instanceTemplates.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Instance Template
  /{project}/global/instanceTemplates/{instanceTemplate}:
    delete:
      summary: Delete Instance Templates
      description: Deletes the specified instance template
      operationId: compute.instanceTemplates.delete
      parameters:
      - in: path
        name: instanceTemplate
        description: The name of the instance template to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Instance Template
    get:
      summary: Get Instance Template
      description: Returns the specified instance template
      operationId: compute.instanceTemplates.get
      parameters:
      - in: path
        name: instanceTemplate
        description: The name of the instance template
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Instance Template
  /{project}/global/licenses/{license}:
    get:
      summary: Get License
      description: Returns the specified License resource
      operationId: compute.licenses.get
      parameters:
      - in: path
        name: license
        description: Name of the License resource to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - License
  /{project}/global/networks:
    get:
      summary: Get Networks
      description: Retrieves the list of networks available to the specified project
      operationId: compute.networks.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Network
    post:
      summary: Create Network
      description: Creates a network in the specified project using the data included
        in the request
      operationId: compute.networks.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Network
  /{project}/global/networks/{network}:
    delete:
      summary: Delete Network
      description: Deletes the specified network
      operationId: compute.networks.delete
      parameters:
      - in: path
        name: network
        description: Name of the network to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Network
    get:
      summary: Get Network
      description: Returns the specified network
      operationId: compute.networks.get
      parameters:
      - in: path
        name: network
        description: Name of the network to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Network
  /{project}/global/networks/{network}/switchToCustomMode:
    post:
      summary: Switc hto Network Mode
      description: Switches the network mode from auto subnet mode to custom subnet
        mode
      operationId: compute.networks.switchToCustomMode
      parameters:
      - in: path
        name: network
        description: Name of the network to be updated
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Network
  /{project}/global/operations:
    get:
      summary: Get Operations
      description: Retrieves a list of Operation resources contained within the specified
        project
      operationId: compute.globalOperations.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Operation
  /{project}/global/operations/{operation}:
    delete:
      summary: Delete Operation
      description: Deletes the specified Operations resource
      operationId: compute.globalOperations.delete
      parameters:
      - in: path
        name: operation
        description: Name of the Operations resource to delete
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Operation
    get:
      summary: Get Operation
      description: Retrieves the specified Operations resource
      operationId: compute.globalOperations.get
      parameters:
      - in: path
        name: operation
        description: Name of the Operations resource to return
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Operation
  /{project}/global/routes:
    get:
      summary: Get Routes
      description: Retrieves the list of Route resources available to the specified
        project
      operationId: compute.routes.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Route
    post:
      summary: Create Route
      description: Creates a Route resource in the specified project using the data
        included in the request
      operationId: compute.routes.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Route
  /{project}/global/routes/{route}:
    delete:
      summary: Delete Route
      description: Deletes the specified Route resource
      operationId: compute.routes.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: route
        description: Name of the Route resource to delete
      responses:
        200:
          description: OK
      tags:
      - Route
    get:
      summary: Get Route
      description: Returns the specified Route resource
      operationId: compute.routes.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: route
        description: Name of the Route resource to return
      responses:
        200:
          description: OK
      tags:
      - Route
  /{project}/global/snapshots:
    get:
      summary: Get Snapshots
      description: Retrieves the list of Snapshot resources contained within the specified
        project
      operationId: compute.snapshots.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Snapshot
  /{project}/global/snapshots/{snapshot}:
    delete:
      summary: Delete Snapshot
      description: Deletes the specified Snapshot resource
      operationId: compute.snapshots.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: snapshot
        description: Name of the Snapshot resource to delete
      responses:
        200:
          description: OK
      tags:
      - Snapshot
    get:
      summary: Get Snapshot
      description: Returns the specified Snapshot resource
      operationId: compute.snapshots.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: snapshot
        description: Name of the Snapshot resource to return
      responses:
        200:
          description: OK
      tags:
      - Snapshot
  /{project}/global/sslCertificates:
    get:
      summary: Get SSL Certificates
      description: Retrieves the list of SslCertificate resources available to the
        specified project
      operationId: compute.sslCertificates.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Certificate
    post:
      summary: Create SSL Certificate
      description: Creates a SslCertificate resource in the specified project using
        the data included in the request
      operationId: compute.sslCertificates.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Certificate
  /{project}/global/sslCertificates/{sslCertificate}:
    delete:
      summary: Delete SSL Certificate
      description: Deletes the specified SslCertificate resource
      operationId: compute.sslCertificates.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: sslCertificate
        description: Name of the SslCertificate resource to delete
      responses:
        200:
          description: OK
      tags:
      - Certificate
    get:
      summary: Get SSL Certificate
      description: Returns the specified SslCertificate resource
      operationId: compute.sslCertificates.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: sslCertificate
        description: Name of the SslCertificate resource to return
      responses:
        200:
          description: OK
      tags:
      - Certificate
  /{project}/global/targetHttpProxies:
    get:
      summary: Get Target HTTP Proxies
      description: Retrieves the list of TargetHttpProxy resources available to the
        specified project
      operationId: compute.targetHttpProxies.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Proxy
    post:
      summary: Create Target HTTP Proxy
      description: Creates a TargetHttpProxy resource in the specified project using
        the data included in the request
      operationId: compute.targetHttpProxies.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Proxy
  /{project}/global/targetHttpProxies/{targetHttpProxy}:
    delete:
      summary: Delete Target HTTP Proxy
      description: Deletes the specified TargetHttpProxy resource
      operationId: compute.targetHttpProxies.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetHttpProxy
        description: Name of the TargetHttpProxy resource to delete
      responses:
        200:
          description: OK
      tags:
      - Proxy
    get:
      summary: Get Target HTTP Proxy
      description: Returns the specified TargetHttpProxy resource
      operationId: compute.targetHttpProxies.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetHttpProxy
        description: Name of the TargetHttpProxy resource to return
      responses:
        200:
          description: OK
      tags:
      - Proxy
  /{project}/global/targetHttpsProxies:
    get:
      summary: Get Target HTTPS Proxies
      description: Retrieves the list of TargetHttpsProxy resources available to the
        specified project
      operationId: compute.targetHttpsProxies.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Proxy
    post:
      summary: Create Target HTTPS Proxy
      description: Creates a TargetHttpsProxy resource in the specified project using
        the data included in the request
      operationId: compute.targetHttpsProxies.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Proxy
  /{project}/global/targetHttpsProxies/{targetHttpsProxy}:
    delete:
      summary: Delete Target HTTPS Proxy
      description: Deletes the specified TargetHttpsProxy resource
      operationId: compute.targetHttpsProxies.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetHttpsProxy
        description: Name of the TargetHttpsProxy resource to delete
      responses:
        200:
          description: OK
      tags:
      - Proxy
    get:
      summary: Get Target HTTPS Proxy
      description: Returns the specified TargetHttpsProxy resource
      operationId: compute.targetHttpsProxies.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetHttpsProxy
        description: Name of the TargetHttpsProxy resource to return
      responses:
        200:
          description: OK
      tags:
      - Proxy
  /{project}/global/targetSslProxies:
    get:
      summary: Get Target SSL Proxies
      description: Retrieves the list of TargetSslProxy resources available to the
        specified project
      operationId: compute.targetSslProxies.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Proxy
    post:
      summary: Create Target SSL Proxy
      description: Creates a TargetSslProxy resource in the specified project using
        the data included in the request
      operationId: compute.targetSslProxies.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Proxy
  /{project}/global/targetSslProxies/{targetSslProxy}:
    delete:
      summary: Delete Target SSL Proxy
      description: Deletes the specified TargetSslProxy resource
      operationId: compute.targetSslProxies.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetSslProxy
        description: Name of the TargetSslProxy resource to delete
      responses:
        200:
          description: OK
      tags:
      - Proxy
    get:
      summary: Get Target SSL Proxy
      description: Returns the specified TargetSslProxy resource
      operationId: compute.targetSslProxies.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetSslProxy
        description: Name of the TargetSslProxy resource to return
      responses:
        200:
          description: OK
      tags:
      - Proxy
  /{project}/global/targetSslProxies/{targetSslProxy}/setBackendService:
    post:
      summary: Set Backend Service
      description: Changes the BackendService for TargetSslProxy
      operationId: compute.targetSslProxies.setBackendService
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetSslProxy
        description: Name of the TargetSslProxy resource whose BackendService resource
          is to be set
      responses:
        200:
          description: OK
      tags:
      - Backend Service
  /{project}/global/targetSslProxies/{targetSslProxy}/setProxyHeader:
    post:
      summary: Set Proxy header Type
      description: Changes the ProxyHeaderType for TargetSslProxy
      operationId: compute.targetSslProxies.setProxyHeader
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetSslProxy
        description: Name of the TargetSslProxy resource whose ProxyHeader is to be
          set
      responses:
        200:
          description: OK
      tags:
      - Proxy
  /{project}/global/targetSslProxies/{targetSslProxy}/setSslCertificates:
    post:
      summary: Change SSL Certificate
      description: Changes SslCertificates for TargetSslProxy
      operationId: compute.targetSslProxies.setSslCertificates
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetSslProxy
        description: Name of the TargetSslProxy resource whose SslCertificate resource
          is to be set
      responses:
        200:
          description: OK
      tags:
      - Certificate
  /{project}/global/urlMaps:
    get:
      summary: Get URL Maps
      description: Retrieves the list of UrlMap resources available to the specified
        project
      operationId: compute.urlMaps.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - URL Map
    post:
      summary: Create URL Map
      description: Creates a UrlMap resource in the specified project using the data
        included in the request
      operationId: compute.urlMaps.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - URL Map
  /{project}/global/urlMaps/{urlMap}:
    delete:
      summary: Delete URL Map
      description: Deletes the specified UrlMap resource
      operationId: compute.urlMaps.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: urlMap
        description: Name of the UrlMap resource to delete
      responses:
        200:
          description: OK
      tags:
      - URL Map
    get:
      summary: Get URL Map
      description: Returns the specified UrlMap resource
      operationId: compute.urlMaps.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: urlMap
        description: Name of the UrlMap resource to return
      responses:
        200:
          description: OK
      tags:
      - URL Map
    patch:
      summary: Update URL Map
      description: Updates the specified UrlMap resource with the data included in
        the request
      operationId: compute.urlMaps.patch
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: urlMap
        description: Name of the UrlMap resource to update
      responses:
        200:
          description: OK
      tags:
      - URL Map
    put:
      summary: Update URL Map
      description: Updates the specified UrlMap resource with the data included in
        the request
      operationId: compute.urlMaps.update
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: urlMap
        description: Name of the UrlMap resource to update
      responses:
        200:
          description: OK
      tags:
      - URL Map
  /{project}/global/urlMaps/{urlMap}/invalidateCache:
    post:
      summary: Invalidate Cache
      description: Initiates a cache invalidation operation, invalidating the specified
        path, scoped to the specified UrlMap
      operationId: compute.urlMaps.invalidateCache
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: urlMap
        description: Name of the UrlMap scoping this request
      responses:
        200:
          description: OK
      tags:
      - Cache
  /{project}/global/urlMaps/{urlMap}/validate:
    post:
      summary: Run Static Validation
      description: Runs static validation for the UrlMap
      operationId: compute.urlMaps.validate
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: urlMap
        description: Name of the UrlMap resource to be validated as
      responses:
        200:
          description: OK
      tags:
      - Validation
  /{project}/moveDisk:
    post:
      summary: Move Disk
      description: Moves a persistent disk from one zone to another
      operationId: compute.projects.moveDisk
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
  /{project}/moveInstance:
    post:
      summary: Move Instance
      description: Moves an instance and its attached persistent disks from one zone
        to another
      operationId: compute.projects.moveInstance
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/regions:
    get:
      summary: Get Regions
      description: Retrieves the list of region resources available to the specified
        project
      operationId: compute.regions.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Region
  /{project}/regions/{region}:
    get:
      summary: Get Region
      description: Returns the specified Region resource
      operationId: compute.regions.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region resource to return
      responses:
        200:
          description: OK
      tags:
      - Region
  /{project}/regions/{region}/addresses:
    get:
      summary: Get Region Addresses
      description: Retrieves a list of addresses contained within the specified region
      operationId: compute.addresses.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - Region Address
    post:
      summary: Create Region Address
      description: Creates an address resource in the specified project using the
        data included in the request
      operationId: compute.addresses.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - Region Address
  /{project}/regions/{region}/addresses/{address}:
    delete:
      summary: Delete Region Address
      description: Deletes the specified address resource
      operationId: compute.addresses.delete
      parameters:
      - in: path
        name: address
        description: Name of the address resource to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - Region Address
    get:
      summary: Get Region Address
      description: Returns the specified address resource
      operationId: compute.addresses.get
      parameters:
      - in: path
        name: address
        description: Name of the address resource to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - Region Address
  /{project}/regions/{region}/autoscalers:
    get:
      summary: Get Autoscalers
      description: Retrieves a list of autoscalers contained within the specified
        region
      operationId: compute.regionAutoscalers.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
    patch:
      summary: Update Autoscaler
      description: Updates an autoscaler in the specified project using the data included
        in the request
      operationId: compute.regionAutoscalers.patch
      parameters:
      - in: query
        name: autoscaler
        description: Name of the autoscaler to update
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
    post:
      summary: Create Autoscaler
      description: Creates an autoscaler in the specified project using the data included
        in the request
      operationId: compute.regionAutoscalers.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
    put:
      summary: Update Autoscaler
      description: Updates an autoscaler in the specified project using the data included
        in the request
      operationId: compute.regionAutoscalers.update
      parameters:
      - in: query
        name: autoscaler
        description: Name of the autoscaler to update
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
  /{project}/regions/{region}/autoscalers/{autoscaler}:
    delete:
      summary: Delete Autoscaler
      description: Deletes the specified autoscaler
      operationId: compute.regionAutoscalers.delete
      parameters:
      - in: path
        name: autoscaler
        description: Name of the autoscaler to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
    get:
      summary: Get Autoscaler
      description: Returns the specified autoscaler
      operationId: compute.regionAutoscalers.get
      parameters:
      - in: path
        name: autoscaler
        description: Name of the autoscaler to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
  /{project}/regions/{region}/backendServices:
    get:
      summary: Get Backend Services
      description: Retrieves the list of regional BackendService resources available
        to the specified project in the given region
      operationId: compute.regionBackendServices.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
    post:
      summary: Create Backend Service
      description: Creates a regional BackendService resource in the specified project
        using the data included in the request
      operationId: compute.regionBackendServices.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
  /{project}/regions/{region}/backendServices/{backendService}:
    delete:
      summary: Delete Backend Service
      description: Deletes the specified regional BackendService resource
      operationId: compute.regionBackendServices.delete
      parameters:
      - in: path
        name: backendService
        description: Name of the BackendService resource to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
    get:
      summary: Get Backend Service
      description: Returns the specified regional BackendService resource
      operationId: compute.regionBackendServices.get
      parameters:
      - in: path
        name: backendService
        description: Name of the BackendService resource to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
    patch:
      summary: Update Backend Service
      description: Updates the specified regional BackendService resource with the
        data included in the request
      operationId: compute.regionBackendServices.patch
      parameters:
      - in: path
        name: backendService
        description: Name of the BackendService resource to update
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
    put:
      summary: Update Backend Service
      description: Updates the specified regional BackendService resource with the
        data included in the request
      operationId: compute.regionBackendServices.update
      parameters:
      - in: path
        name: backendService
        description: Name of the BackendService resource to update
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
  /{project}/regions/{region}/backendServices/{backendService}/getHealth:
    post:
      summary: Get Backend Service Health Check
      description: Gets the most recent health check results for this regional BackendService
      operationId: compute.regionBackendServices.getHealth
      parameters:
      - in: path
        name: backendService
        description: Name of the BackendService resource to which the queried instance
          belongs
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Backend Service
  /{project}/regions/{region}/forwardingRules:
    get:
      summary: Get Forwarding Rules
      description: Retrieves a list of ForwardingRule resources available to the specified
        project and region
      operationId: compute.forwardingRules.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Forward Rule
    post:
      summary: Create Forwarding Rule
      description: Creates a ForwardingRule resource in the specified project and
        region using the data included in the request
      operationId: compute.forwardingRules.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Forward Rule
  /{project}/regions/{region}/forwardingRules/{forwardingRule}:
    delete:
      summary: Delete Forwarding Rule
      description: Deletes the specified ForwardingRule resource
      operationId: compute.forwardingRules.delete
      parameters:
      - in: path
        name: forwardingRule
        description: Name of the ForwardingRule resource to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Forward Rule
    get:
      summary: Get Forwarding Rule
      description: Returns the specified ForwardingRule resource
      operationId: compute.forwardingRules.get
      parameters:
      - in: path
        name: forwardingRule
        description: Name of the ForwardingRule resource to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Forward Rule
  /{project}/regions/{region}/forwardingRules/{forwardingRule}/setTarget:
    post:
      summary: Update Forwarding Rule
      description: Changes target URL for forwarding rule
      operationId: compute.forwardingRules.setTarget
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: forwardingRule
        description: Name of the ForwardingRule resource in which target is to be
          set
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Forward Rule
  /{project}/regions/{region}/instanceGroupManagers:
    get:
      summary: Get Instance Group Managers
      description: Retrieves the list of managed instance groups that are contained
        within the specified region
      operationId: compute.regionInstanceGroupManagers.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance Group
    post:
      summary: Create Instance Group Manager
      description: Creates a managed instance group using the information that you
        specify in the request
      operationId: compute.regionInstanceGroupManagers.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}:
    delete:
      summary: Delete Instance Group Manager
      description: Deletes the specified managed instance group and all of the instances
        in that group
      operationId: compute.regionInstanceGroupManagers.delete
      parameters:
      - in: path
        name: instanceGroupManager
        description: Name of the managed instance group to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance Group
    get:
      summary: Get Instance Group Manager
      description: Returns all of the details about the specified managed instance
        group
      operationId: compute.regionInstanceGroupManagers.get
      parameters:
      - in: path
        name: instanceGroupManager
        description: Name of the managed instance group to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/abandonInstances:
    post:
      summary: Schedule Remove instance
      description: Schedules a group action to remove the specified instances from
        the managed instance group
      operationId: compute.regionInstanceGroupManagers.abandonInstances
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroupManager
        description: Name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/deleteInstances:
    post:
      summary: Schedule Delete instance
      description: Schedules a group action to delete the specified instances in the
        managed instance group
      operationId: compute.regionInstanceGroupManagers.deleteInstances
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroupManager
        description: Name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances:
    post:
      summary: Get instances
      description: Lists the instances in the managed instance group and instances
        that are scheduled to be created
      operationId: compute.regionInstanceGroupManagers.listManagedInstances
      parameters:
      - in: query
        name: filter
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group
      - in: query
        name: maxResults
      - in: query
        name: order_by
      - in: query
        name: pageToken
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/recreateInstances:
    post:
      summary: Recreate Instance
      description: Schedules a group action to recreate the specified instances in
        the managed instance group
      operationId: compute.regionInstanceGroupManagers.recreateInstances
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroupManager
        description: Name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/resize:
    post:
      summary: Resize Instance
      description: Changes the intended size for the managed instance group
      operationId: compute.regionInstanceGroupManagers.resize
      parameters:
      - in: path
        name: instanceGroupManager
        description: Name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: query
        name: size
        description: Number of instances that should exist in this instance group
          manager
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate:
    post:
      summary: Set Instance Template
      description: Sets the instance template to use when creating new instances or
        recreating instances in this group
      operationId: compute.regionInstanceGroupManagers.setInstanceTemplate
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/regions/{region}/instanceGroupManagers/{instanceGroupManager}/setTargetPools:
    post:
      summary: Set Instance Target Pools
      description: Modifies the target pools to which all new instances in this group
        are assigned
      operationId: compute.regionInstanceGroupManagers.setTargetPools
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroupManager
        description: Name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/regions/{region}/instanceGroups:
    get:
      summary: Get Instance Groups
      description: Retrieves the list of instance group resources contained within
        the specified region
      operationId: compute.regionInstanceGroups.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/regions/{region}/instanceGroups/{instanceGroup}:
    get:
      summary: Get Instance Group
      description: Returns the specified instance group resource
      operationId: compute.regionInstanceGroups.get
      parameters:
      - in: path
        name: instanceGroup
        description: Name of the instance group resource to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/regions/{region}/instanceGroups/{instanceGroup}/listInstances:
    post:
      summary: List Instances
      description: Lists the instances in the specified instance group and displays
        information about the named ports
      operationId: compute.regionInstanceGroups.listInstances
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: path
        name: instanceGroup
        description: Name of the regional instance group for which we want to list
          the instances
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/regions/{region}/instanceGroups/{instanceGroup}/setNamedPorts:
    post:
      summary: Set Named Portal
      description: Sets the named ports for the specified regional instance group
      operationId: compute.regionInstanceGroups.setNamedPorts
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroup
        description: The name of the regional instance group where the named ports
          are updated
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/regions/{region}/operations:
    get:
      summary: Get Operations
      description: Retrieves a list of Operation resources contained within the specified
        region
      operationId: compute.regionOperations.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - Operation
  /{project}/regions/{region}/operations/{operation}:
    delete:
      summary: Delete Operation
      description: Deletes the specified region-specific Operations resource
      operationId: compute.regionOperations.delete
      parameters:
      - in: path
        name: operation
        description: Name of the Operations resource to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - Operation
    get:
      summary: Get Operation
      description: Retrieves the specified region-specific Operations resource
      operationId: compute.regionOperations.get
      parameters:
      - in: path
        name: operation
        description: Name of the Operations resource to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - Operation
  /{project}/regions/{region}/routers:
    get:
      summary: Get Routers
      description: Retrieves a list of Router resources available to the specified
        project
      operationId: compute.routers.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - Router
    post:
      summary: Create Router
      description: Creates a Router resource in the specified project and region using
        the data included in the request
      operationId: compute.routers.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - Router
  /{project}/regions/{region}/routers/{router}:
    delete:
      summary: Delete Router
      description: Deletes the specified Router resource
      operationId: compute.routers.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: router
        description: Name of the Router resource to delete
      responses:
        200:
          description: OK
      tags:
      - Router
    get:
      summary: Get Router
      description: Returns the specified Router resource
      operationId: compute.routers.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: router
        description: Name of the Router resource to return
      responses:
        200:
          description: OK
      tags:
      - Router
    patch:
      summary: Update Router
      description: Updates the specified Router resource with the data included in
        the request
      operationId: compute.routers.patch
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: router
        description: Name of the Router resource to update
      responses:
        200:
          description: OK
      tags:
      - Router
    put:
      summary: Update Router
      description: Updates the specified Router resource with the data included in
        the request
      operationId: compute.routers.update
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: router
        description: Name of the Router resource to update
      responses:
        200:
          description: OK
      tags:
      - Router
  /{project}/regions/{region}/routers/{router}/getRouterStatus:
    get:
      summary: Update Router Status
      description: Retrieves runtime information of the specified router
      operationId: compute.routers.getRouterStatus
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: router
        description: Name of the Router resource to query
      responses:
        200:
          description: OK
      tags:
      - Router
  /{project}/regions/{region}/routers/{router}/preview:
    post:
      summary: Preview Router
      description: Preview fields auto-generated during router create and update operations
      operationId: compute.routers.preview
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: router
        description: Name of the Router resource to query
      responses:
        200:
          description: OK
      tags:
      - Router
  /{project}/regions/{region}/subnetworks:
    get:
      summary: Get Subnetworks
      description: Retrieves a list of subnetworks available to the specified project
      operationId: compute.subnetworks.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Subnetwork
    post:
      summary: Create Subnetwork
      description: Creates a subnetwork in the specified project using the data included
        in the request
      operationId: compute.subnetworks.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Subnetwork
  /{project}/regions/{region}/subnetworks/{subnetwork}:
    delete:
      summary: Delete Subnetwork
      description: Deletes the specified subnetwork
      operationId: compute.subnetworks.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: path
        name: subnetwork
        description: Name of the Subnetwork resource to delete
      responses:
        200:
          description: OK
      tags:
      - Subnetwork
    get:
      summary: Get Subnetwork
      description: Returns the specified subnetwork
      operationId: compute.subnetworks.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: path
        name: subnetwork
        description: Name of the Subnetwork resource to return
      responses:
        200:
          description: OK
      tags:
      - Subnetwork
  /{project}/regions/{region}/subnetworks/{subnetwork}/expandIpCidrRange:
    post:
      summary: Update Subnetwork
      description: Expands the IP CIDR range of the subnetwork to a specified value
      operationId: compute.subnetworks.expandIpCidrRange
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: path
        name: subnetwork
        description: Name of the Subnetwork resource to update
      responses:
        200:
          description: OK
      tags:
      - Subnetwork
  /{project}/regions/{region}/targetPools:
    get:
      summary: Get Target Pools
      description: Retrieves a list of target pools available to the specified project
        and region
      operationId: compute.targetPools.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Target Pool
    post:
      summary: Create Target Pool
      description: Creates a target pool in the specified project and region using
        the data included in the request
      operationId: compute.targetPools.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      responses:
        200:
          description: OK
      tags:
      - Target Pool
  /{project}/regions/{region}/targetPools/{targetPool}:
    delete:
      summary: Delete Target Pool
      description: Deletes the specified target pool
      operationId: compute.targetPools.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: path
        name: targetPool
        description: Name of the TargetPool resource to delete
      responses:
        200:
          description: OK
      tags:
      - Target Pool
    get:
      summary: Get Target Pool
      description: Returns the specified target pool
      operationId: compute.targetPools.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: path
        name: targetPool
        description: Name of the TargetPool resource to return
      responses:
        200:
          description: OK
      tags:
      - Target Pool
  /{project}/regions/{region}/targetPools/{targetPool}/addHealthCheck:
    post:
      summary: Add Target Pool Health Check
      description: Adds health check URLs to a target pool
      operationId: compute.targetPools.addHealthCheck
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: path
        name: targetPool
        description: Name of the target pool to add a health check to
      responses:
        200:
          description: OK
      tags:
      - Target Pool
  /{project}/regions/{region}/targetPools/{targetPool}/addInstance:
    post:
      summary: Add Instance to Target pool
      description: Adds an instance to a target pool
      operationId: compute.targetPools.addInstance
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: path
        name: targetPool
        description: Name of the TargetPool resource to add instances to
      responses:
        200:
          description: OK
      tags:
      - Target Pool
  /{project}/regions/{region}/targetPools/{targetPool}/getHealth:
    post:
      summary: Get Target Pool Health Check
      description: Gets the most recent health check results for each IP for the instance
        that is referenced by the given target pool
      operationId: compute.targetPools.getHealth
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: path
        name: targetPool
        description: Name of the TargetPool resource to which the queried instance
          belongs
      responses:
        200:
          description: OK
      tags:
      - Target Pool
  /{project}/regions/{region}/targetPools/{targetPool}/removeHealthCheck:
    post:
      summary: Remove Target Pool  Health Check
      description: Removes health check URL from a target pool
      operationId: compute.targetPools.removeHealthCheck
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: targetPool
        description: Name of the target pool to remove health checks from
      responses:
        200:
          description: OK
      tags:
      - Target Pool
  /{project}/regions/{region}/targetPools/{targetPool}/removeInstance:
    post:
      summary: Remove Instance From Target Pool
      description: Removes instance URL from a target pool
      operationId: compute.targetPools.removeInstance
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: path
        name: targetPool
        description: Name of the TargetPool resource to remove instances from
      responses:
        200:
          description: OK
      tags:
      - Target Pool
  /{project}/regions/{region}/targetPools/{targetPool}/setBackup:
    post:
      summary: Change Target Pool Backup
      description: Changes a backup target pool's configurations
      operationId: compute.targetPools.setBackup
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: query
        name: failoverRatio
        description: New failoverRatio value for the target pool
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region scoping this request
      - in: path
        name: targetPool
        description: Name of the TargetPool resource to set a backup pool for
      responses:
        200:
          description: OK
      tags:
      - Target Pool
  /{project}/regions/{region}/targetVpnGateways:
    get:
      summary: Get Target Pool VPN Gateways
      description: Retrieves a list of target VPN gateways available to the specified
        project and region
      operationId: compute.targetVpnGateways.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - VPN Gateway
    post:
      summary: Create Target Pool VPN Gateway
      description: Creates a target VPN gateway in the specified project and region
        using the data included in the request
      operationId: compute.targetVpnGateways.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - VPN Gateway
  /{project}/regions/{region}/targetVpnGateways/{targetVpnGateway}:
    delete:
      summary: Delete Target Pool VPN Gateway
      description: Deletes the specified target VPN gateway
      operationId: compute.targetVpnGateways.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: targetVpnGateway
        description: Name of the target VPN gateway to delete
      responses:
        200:
          description: OK
      tags:
      - VPN Gateway
    get:
      summary: Get Target Pool VPN Gateway
      description: Returns the specified target VPN gateway
      operationId: compute.targetVpnGateways.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: targetVpnGateway
        description: Name of the target VPN gateway to return
      responses:
        200:
          description: OK
      tags:
      - VPN Gateway
  /{project}/regions/{region}/vpnTunnels:
    get:
      summary: Get VPN Tunnels
      description: Retrieves a list of VpnTunnel resources contained in the specified
        project and region
      operationId: compute.vpnTunnels.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - VPN Tunnel
    post:
      summary: Create VPN Tunnel
      description: Creates a VpnTunnel resource in the specified project and region
        using the data included in the request
      operationId: compute.vpnTunnels.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      responses:
        200:
          description: OK
      tags:
      - VPN Tunnel
  /{project}/regions/{region}/vpnTunnels/{vpnTunnel}:
    delete:
      summary: Delete VPN Tunnel
      description: Deletes the specified VpnTunnel resource
      operationId: compute.vpnTunnels.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: vpnTunnel
        description: Name of the VpnTunnel resource to delete
      responses:
        200:
          description: OK
      tags:
      - VPN Tunnel
    get:
      summary: Get VPN Tunnel
      description: Returns the specified VpnTunnel resource
      operationId: compute.vpnTunnels.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: region
        description: Name of the region for this request
      - in: path
        name: vpnTunnel
        description: Name of the VpnTunnel resource to return
      responses:
        200:
          description: OK
      tags:
      - VPN Tunnel
  /{project}/setCommonInstanceMetadata:
    post:
      summary: Set Common Instance Metadata
      description: Sets metadata common to all instances within the specified project
        using the data included in the request
      operationId: compute.projects.setCommonInstanceMetadata
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/setUsageExportBucket:
    post:
      summary: Set Usage Export Bucket
      description: Enables the usage export feature and sets the usage export bucket
        where reports are stored
      operationId: compute.projects.setUsageExportBucket
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Bucket
  /{project}/targetHttpProxies/{targetHttpProxy}/setUrlMap:
    post:
      summary: Target HTTP Proxies URL Map
      description: Changes the URL map for TargetHttpProxy
      operationId: compute.targetHttpProxies.setUrlMap
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetHttpProxy
        description: Name of the TargetHttpProxy to set a URL map for
      responses:
        200:
          description: OK
      tags:
      - URL Map
  /{project}/targetHttpsProxies/{targetHttpsProxy}/setSslCertificates:
    post:
      summary: Replace SSL Certificate for Target HTTP PRoxy
      description: Replaces SslCertificates for TargetHttpsProxy
      operationId: compute.targetHttpsProxies.setSslCertificates
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetHttpsProxy
        description: Name of the TargetHttpsProxy resource to set an SslCertificates
          resource for
      responses:
        200:
          description: OK
      tags:
      - Certificate
  /{project}/targetHttpsProxies/{targetHttpsProxy}/setUrlMap:
    post:
      summary: Change URL Map for Target HTTP PRoxy
      description: Changes the URL map for TargetHttpsProxy
      operationId: compute.targetHttpsProxies.setUrlMap
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetHttpsProxy
        description: Name of the TargetHttpsProxy resource whose URL map is to be
          set
      responses:
        200:
          description: OK
      tags:
      - Proxy
  /{project}/zones:
    get:
      summary: Get Zones
      description: Retrieves the list of Zone resources available to the specified
        project
      operationId: compute.zones.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      responses:
        200:
          description: OK
      tags:
      - Zone
  /{project}/zones/{zone}:
    get:
      summary: Get Zone
      description: Returns the specified Zone resource
      operationId: compute.zones.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone resource to return
      responses:
        200:
          description: OK
      tags:
      - Zone
  /{project}/zones/{zone}/autoscalers:
    get:
      summary: Get Zone Autoscalers
      description: Retrieves a list of autoscalers contained within the specified
        zone
      operationId: compute.autoscalers.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
    patch:
      summary: Update Zone Autoscaler
      description: Updates an autoscaler in the specified project using the data included
        in the request
      operationId: compute.autoscalers.patch
      parameters:
      - in: query
        name: autoscaler
        description: Name of the autoscaler to update
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
    post:
      summary: Create Zone Autoscaler
      description: Creates an autoscaler in the specified project using the data included
        in the request
      operationId: compute.autoscalers.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
    put:
      summary: Update Zone Autoscaler
      description: Updates an autoscaler in the specified project using the data included
        in the request
      operationId: compute.autoscalers.update
      parameters:
      - in: query
        name: autoscaler
        description: Name of the autoscaler to update
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
  /{project}/zones/{zone}/autoscalers/{autoscaler}:
    delete:
      summary: Delete Zone Autoscaler
      description: Deletes the specified autoscaler
      operationId: compute.autoscalers.delete
      parameters:
      - in: path
        name: autoscaler
        description: Name of the autoscaler to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
    get:
      summary: UpGetdate Zone Autoscaler
      description: Returns the specified autoscaler resource
      operationId: compute.autoscalers.get
      parameters:
      - in: path
        name: autoscaler
        description: Name of the autoscaler to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Autoscaler
  /{project}/zones/{zone}/disks:
    get:
      summary: Get Zone Disks
      description: Retrieves a list of persistent disks contained within the specified
        zone
      operationId: compute.disks.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
    post:
      summary: Create Zone Disk
      description: Creates a persistent disk in the specified project using the data
        in the request
      operationId: compute.disks.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: query
        name: sourceImage
        description: Optional
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
  /{project}/zones/{zone}/disks/{disk}:
    delete:
      summary: Delete Zone Disk
      description: Deletes the specified persistent disk
      operationId: compute.disks.delete
      parameters:
      - in: path
        name: disk
        description: Name of the persistent disk to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
    get:
      summary: Get Zone Disk
      description: Returns a specified persistent disk
      operationId: compute.disks.get
      parameters:
      - in: path
        name: disk
        description: Name of the persistent disk to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
  /{project}/zones/{zone}/disks/{disk}/createSnapshot:
    post:
      summary: Create Snapshot of Zone Disk
      description: Creates a snapshot of a specified persistent disk
      operationId: compute.disks.createSnapshot
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: disk
        description: Name of the persistent disk to snapshot
      - in: query
        name: guestFlush
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
  /{project}/zones/{zone}/disks/{disk}/resize:
    post:
      summary: Resize Zone Disk
      description: Resizes the specified persistent disk
      operationId: compute.disks.resize
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: disk
        description: The name of the persistent disk
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
  /{project}/zones/{zone}/diskTypes:
    get:
      summary: Get Zone Disk Types
      description: Retrieves a list of disk types available to the specified project
      operationId: compute.diskTypes.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
  /{project}/zones/{zone}/diskTypes/{diskType}:
    get:
      summary: Get Zone Disk Type
      description: Returns the specified disk type
      operationId: compute.diskTypes.get
      parameters:
      - in: path
        name: diskType
        description: Name of the disk type to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
  /{project}/zones/{zone}/instanceGroupManagers:
    get:
      summary: Get Zone Instance Group Managers
      description: Retrieves a list of managed instance groups that are contained
        within the specified project and zone
      operationId: compute.instanceGroupManagers.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the managed instance group is located
      responses:
        200:
          description: OK
      tags:
      - Group Manager
    post:
      summary: Create Zone Instance Group Manager
      description: Creates a managed instance group using the information that you
        specify in the request
      operationId: compute.instanceGroupManagers.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where you want to create the managed instance
          group
      responses:
        200:
          description: OK
      tags:
      - Group Manager
  /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}:
    delete:
      summary: Delete Zone Instance Group Manager
      description: Deletes the specified managed instance group and all of the instances
        in that group
      operationId: compute.instanceGroupManagers.delete
      parameters:
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the managed instance group is located
      responses:
        200:
          description: OK
      tags:
      - Group Manager
    get:
      summary: Get Zone Instance Group Manager
      description: Returns all of the details about the specified managed instance
        group
      operationId: compute.instanceGroupManagers.get
      parameters:
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the managed instance group is located
      responses:
        200:
          description: OK
      tags:
      - Group Manager
  /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/abandonInstances:
    post:
      summary: Schedule Action to Abandon Instance
      description: Schedules a group action to remove the specified instances from
        the managed instance group
      operationId: compute.instanceGroupManagers.abandonInstances
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the managed instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/deleteInstances:
    post:
      summary: Schedule Action to Delete Instance
      description: Schedules a group action to delete the specified instances in the
        managed instance group
      operationId: compute.instanceGroupManagers.deleteInstances
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the managed instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/listManagedInstances:
    post:
      summary: Get Zone Managed Instances
      description: Lists all of the instances in the managed instance group
      operationId: compute.instanceGroupManagers.listManagedInstances
      parameters:
      - in: query
        name: filter
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group
      - in: query
        name: maxResults
      - in: query
        name: order_by
      - in: query
        name: pageToken
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the managed instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/recreateInstances:
    post:
      summary: Schedule Recreate of Instance
      description: Schedules a group action to recreate the specified instances in
        the managed instance group
      operationId: compute.instanceGroupManagers.recreateInstances
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the managed instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/resize:
    post:
      summary: Schedule Resize of Instance
      description: Resizes the managed instance group
      operationId: compute.instanceGroupManagers.resize
      parameters:
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: query
        name: size
        description: The number of running instances that the managed instance group
          should maintain at any given time
      - in: path
        name: zone
        description: The name of the zone where the managed instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setInstanceTemplate:
    post:
      summary: Set  Zone Managed Instance Template
      description: Specifies the instance template to use when creating new instances
        in this group
      operationId: compute.instanceGroupManagers.setInstanceTemplate
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the managed instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instanceGroupManagers/{instanceGroupManager}/setTargetPools:
    post:
      summary: Modify  Zone Managed Instance Target Pool
      description: Modifies the target pools to which all instances in this managed
        instance group are assigned
      operationId: compute.instanceGroupManagers.setTargetPools
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroupManager
        description: The name of the managed instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the managed instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instanceGroups:
    get:
      summary: Get Zone Instance Groups
      description: Retrieves the list of instance groups that are located in the specified
        project and zone
      operationId: compute.instanceGroups.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance Group
    post:
      summary: Create Zone Instance Group
      description: Creates an instance group in the specified project using the parameters
        that are included in the request
      operationId: compute.instanceGroups.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where you want to create the instance group
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/zones/{zone}/instanceGroups/{instanceGroup}:
    delete:
      summary: Delete Zone Instance Group
      description: Deletes the specified instance group
      operationId: compute.instanceGroups.delete
      parameters:
      - in: path
        name: instanceGroup
        description: The name of the instance group to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance Group
    get:
      summary: Get Zone Instance Group
      description: Returns the specified instance group
      operationId: compute.instanceGroups.get
      parameters:
      - in: path
        name: instanceGroup
        description: The name of the instance group
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/zones/{zone}/instanceGroups/{instanceGroup}/addInstances:
    post:
      summary: Add Instance to Zone Instance Group
      description: Adds a list of instances to the specified instance group
      operationId: compute.instanceGroups.addInstances
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroup
        description: The name of the instance group where you are adding instances
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/zones/{zone}/instanceGroups/{instanceGroup}/listInstances:
    post:
      summary: Get Instance in Zone Instance Group
      description: Lists the instances in the specified instance group
      operationId: compute.instanceGroups.listInstances
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: path
        name: instanceGroup
        description: The name of the instance group from which you want to generate
          a list of included instances
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/zones/{zone}/instanceGroups/{instanceGroup}/removeInstances:
    post:
      summary: Remove Instance in Zone Instance Group
      description: Removes one or more instances from the specified instance group,
        but does not delete those instances
      operationId: compute.instanceGroups.removeInstances
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroup
        description: The name of the instance group where the specified instances
          will be removed
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/zones/{zone}/instanceGroups/{instanceGroup}/setNamedPorts:
    post:
      summary: Set Named Ports for Zone Instance Group
      description: Sets the named ports for the specified instance group
      operationId: compute.instanceGroups.setNamedPorts
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instanceGroup
        description: The name of the instance group where the named ports are updated
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone where the instance group is located
      responses:
        200:
          description: OK
      tags:
      - Instance Group
  /{project}/zones/{zone}/instances:
    get:
      summary: Get Zone Instances
      description: Retrieves the list of instances contained within the specified
        zone
      operationId: compute.instances.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
    post:
      summary: Create Zone Instance
      description: Creates an instance resource in the specified project using the
        data included in the request
      operationId: compute.instances.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}:
    delete:
      summary: Delete Zone Instance
      description: Deletes the specified Instance resource
      operationId: compute.instances.delete
      parameters:
      - in: path
        name: instance
        description: Name of the instance resource to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
    get:
      summary: Get Zone Instance
      description: Returns the specified Instance resource
      operationId: compute.instances.get
      parameters:
      - in: path
        name: instance
        description: Name of the instance resource to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/addAccessConfig:
    post:
      summary: Add Access to Zone Instance
      description: Adds an access config to an instance's network interface
      operationId: compute.instances.addAccessConfig
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instance
        description: The instance name for this request
      - in: query
        name: networkInterface
        description: The name of the network interface to add to this instance
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/attachDisk:
    post:
      summary: Attach Disk to Zone Instance
      description: Attaches a Disk resource to an instance
      operationId: compute.instances.attachDisk
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instance
        description: The instance name for this request
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Disk
  /{project}/zones/{zone}/instances/{instance}/deleteAccessConfig:
    post:
      summary: Delete Access to Zone Instance
      description: Deletes an access config from an instance's network interface
      operationId: compute.instances.deleteAccessConfig
      parameters:
      - in: query
        name: accessConfig
        description: The name of the access config to delete
      - in: path
        name: instance
        description: The instance name for this request
      - in: query
        name: networkInterface
        description: The name of the network interface
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/detachDisk:
    post:
      summary: Detach Disk from Zone Instance
      description: Detaches a disk from an instance
      operationId: compute.instances.detachDisk
      parameters:
      - in: query
        name: deviceName
        description: Disk device name to detach
      - in: path
        name: instance
        description: Instance name
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/reset:
    post:
      summary: Reset Zone Instance
      description: Performs a hard reset on the instance
      operationId: compute.instances.reset
      parameters:
      - in: path
        name: instance
        description: Name of the instance scoping this request
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/serialPort:
    get:
      summary: Get Zone Instance Serial Port
      description: Returns the specified instance's serial port output
      operationId: compute.instances.getSerialPortOutput
      parameters:
      - in: path
        name: instance
        description: Name of the instance scoping this request
      - in: query
        name: port
        description: Specifies which COM or serial port to retrieve data from
      - in: path
        name: project
        description: Project ID for this request
      - in: query
        name: start
        description: Returns output starting from a specific byte position
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/setDiskAutoDelete:
    post:
      summary: Set Zone Instance Disk Auto Delete
      description: Sets the auto-delete flag for a disk attached to an instance
      operationId: compute.instances.setDiskAutoDelete
      parameters:
      - in: query
        name: autoDelete
        description: Whether to auto-delete the disk when the instance is deleted
      - in: query
        name: deviceName
        description: The device name of the disk to modify
      - in: path
        name: instance
        description: The instance name
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/setMachineType:
    post:
      summary: Set Zone Instance Machine Type
      description: Changes the machine type for a stopped instance to the machine
        type specified in the request
      operationId: compute.instances.setMachineType
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instance
        description: Name of the instance scoping this request
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/setMetadata:
    post:
      summary: Set Zone Instance Metadata
      description: Sets metadata for the specified instance to the data included in
        the request
      operationId: compute.instances.setMetadata
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instance
        description: Name of the instance scoping this request
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/setScheduling:
    post:
      summary: Set Zone Instance Scheduling
      description: Sets an instance's scheduling options
      operationId: compute.instances.setScheduling
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instance
        description: Instance name
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/setServiceAccount:
    post:
      summary: Set Zone Instance Service Account
      description: Sets the service account on the instance
      operationId: compute.instances.setServiceAccount
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instance
        description: Name of the instance resource to start
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/setTags:
    post:
      summary: Set Zone Instance Tags
      description: Sets tags for the specified instance to the data included in the
        request
      operationId: compute.instances.setTags
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instance
        description: Name of the instance scoping this request
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/start:
    post:
      summary: Start Zone Instance
      description: Starts an instance that was stopped using the using the instances()
      operationId: compute.instances.start
      parameters:
      - in: path
        name: instance
        description: Name of the instance resource to start
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/startWithEncryptionKey:
    post:
      summary: Start Zone Instance with Encryption Key
      description: Starts an instance that was stopped using the using the instances()
      operationId: compute.instances.startWithEncryptionKey
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: instance
        description: Name of the instance resource to start
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/instances/{instance}/stop:
    post:
      summary: Stop Zone Instance
      description: Stops a running instance, shutting it down cleanly, and allows
        you to restart the instance at a later time
      operationId: compute.instances.stop
      parameters:
      - in: path
        name: instance
        description: Name of the instance resource to stop
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/machineTypes:
    get:
      summary: Get Zone Instance Machine Types
      description: Retrieves a list of machine types available to the specified project
      operationId: compute.machineTypes.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/machineTypes/{machineType}:
    get:
      summary: Get Zone Instance Machine Type
      description: Returns the specified machine type
      operationId: compute.machineTypes.get
      parameters:
      - in: path
        name: machineType
        description: Name of the machine type to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: The name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/operations:
    get:
      summary: Get Zone Instance Machine Operatons
      description: Retrieves a list of Operation resources contained within the specified
        zone
      operationId: compute.zoneOperations.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone for request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/operations/{operation}:
    delete:
      summary: Delete Zone Instance Machine Operaton
      description: Deletes the specified zone-specific Operations resource
      operationId: compute.zoneOperations.delete
      parameters:
      - in: path
        name: operation
        description: Name of the Operations resource to delete
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
    get:
      summary: Get Zone Instance Machine Operaton
      description: Retrieves the specified zone-specific Operations resource
      operationId: compute.zoneOperations.get
      parameters:
      - in: path
        name: operation
        description: Name of the Operations resource to return
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone for this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/targetInstances:
    get:
      summary: Get Zone Target Instances
      description: Retrieves a list of TargetInstance resources available to the specified
        project and zone
      operationId: compute.targetInstances.list
      parameters:
      - in: query
        name: filter
        description: Sets a filter expression for filtering listed resources, in the
          form filter={expression}
      - in: query
        name: maxResults
        description: The maximum number of results per page that should be returned
      - in: query
        name: orderBy
        description: Sorts list results by a certain order
      - in: query
        name: pageToken
        description: Specifies a page token to use
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
    post:
      summary: Create Zone Target Instance
      description: Creates a TargetInstance resource in the specified project and
        zone using the data included in the request
      operationId: compute.targetInstances.insert
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/holder'
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: zone
        description: Name of the zone scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
  /{project}/zones/{zone}/targetInstances/{targetInstance}:
    delete:
      summary: Delete Zone Target Instance
      description: Deletes the specified TargetInstance resource
      operationId: compute.targetInstances.delete
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetInstance
        description: Name of the TargetInstance resource to delete
      - in: path
        name: zone
        description: Name of the zone scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
    get:
      summary: Get Zone Target Instance
      description: Returns the specified TargetInstance resource
      operationId: compute.targetInstances.get
      parameters:
      - in: path
        name: project
        description: Project ID for this request
      - in: path
        name: targetInstance
        description: Name of the TargetInstance resource to return
      - in: path
        name: zone
        description: Name of the zone scoping this request
      responses:
        200:
          description: OK
      tags:
      - Instance
definitions:
  AccessConfig:
    properties:
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      natIP:
        description: This is a default description.
        type: parameters
      type:
        description: This is a default description.
        type: parameters
  Address:
    properties:
      address:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
      users:
        description: This is a default description.
        type: parameters
  AddressAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  AddressList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  AddressesScopedList:
    properties:
      addresses:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  AttachedDisk:
    properties:
      autoDelete:
        description: This is a default description.
        type: parameters
      boot:
        description: This is a default description.
        type: parameters
      deviceName:
        description: This is a default description.
        type: parameters
      index:
        description: This is a default description.
        type: parameters
      interface:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      licenses:
        description: This is a default description.
        type: parameters
      mode:
        description: This is a default description.
        type: parameters
      source:
        description: This is a default description.
        type: parameters
      type:
        description: This is a default description.
        type: parameters
  AttachedDiskInitializeParams:
    properties:
      diskName:
        description: This is a default description.
        type: parameters
      diskSizeGb:
        description: This is a default description.
        type: parameters
      diskType:
        description: This is a default description.
        type: parameters
      sourceImage:
        description: This is a default description.
        type: parameters
  Autoscaler:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      target:
        description: This is a default description.
        type: parameters
      zone:
        description: This is a default description.
        type: parameters
  AutoscalerAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  AutoscalerList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  AutoscalersScopedList:
    properties:
      autoscalers:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  AutoscalingPolicy:
    properties:
      coolDownPeriodSec:
        description: This is a default description.
        type: parameters
      customMetricUtilizations:
        description: This is a default description.
        type: parameters
      maxNumReplicas:
        description: This is a default description.
        type: parameters
      minNumReplicas:
        description: This is a default description.
        type: parameters
  AutoscalingPolicyCpuUtilization:
    properties:
      utilizationTarget:
        description: This is a default description.
        type: parameters
  AutoscalingPolicyCustomMetricUtilization:
    properties:
      metric:
        description: This is a default description.
        type: parameters
      utilizationTarget:
        description: This is a default description.
        type: parameters
      utilizationTargetType:
        description: This is a default description.
        type: parameters
  AutoscalingPolicyLoadBalancingUtilization:
    properties:
      utilizationTarget:
        description: This is a default description.
        type: parameters
  Backend:
    properties:
      balancingMode:
        description: This is a default description.
        type: parameters
      capacityScaler:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      group:
        description: This is a default description.
        type: parameters
      maxConnections:
        description: This is a default description.
        type: parameters
      maxConnectionsPerInstance:
        description: This is a default description.
        type: parameters
      maxRate:
        description: This is a default description.
        type: parameters
      maxRatePerInstance:
        description: This is a default description.
        type: parameters
      maxUtilization:
        description: This is a default description.
        type: parameters
  BackendBucket:
    properties:
      bucketName:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      enableCdn:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  BackendBucketList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  BackendService:
    properties:
      affinityCookieTtlSec:
        description: This is a default description.
        type: parameters
      backends:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      enableCDN:
        description: This is a default description.
        type: parameters
      fingerprint:
        description: This is a default description.
        type: parameters
      healthChecks:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      loadBalancingScheme:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      port:
        description: This is a default description.
        type: parameters
      portName:
        description: This is a default description.
        type: parameters
      protocol:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      sessionAffinity:
        description: This is a default description.
        type: parameters
      timeoutSec:
        description: This is a default description.
        type: parameters
  BackendServiceAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  BackendServiceGroupHealth:
    properties:
      healthStatus:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
  BackendServiceList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  BackendServicesScopedList:
    properties:
      backendServices:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  CacheInvalidationRule:
    properties:
      host:
        description: This is a default description.
        type: parameters
      path:
        description: This is a default description.
        type: parameters
  ConnectionDraining:
    properties:
      drainingTimeoutSec:
        description: This is a default description.
        type: parameters
  CustomerEncryptionKey:
    properties:
      rawKey:
        description: This is a default description.
        type: parameters
      sha256:
        description: This is a default description.
        type: parameters
  CustomerEncryptionKeyProtectedDisk:
    properties:
      source:
        description: This is a default description.
        type: parameters
  DeprecationStatus:
    properties:
      deleted:
        description: This is a default description.
        type: parameters
      deprecated:
        description: This is a default description.
        type: parameters
      obsolete:
        description: This is a default description.
        type: parameters
      replacement:
        description: This is a default description.
        type: parameters
      state:
        description: This is a default description.
        type: parameters
  Disk:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      lastAttachTimestamp:
        description: This is a default description.
        type: parameters
      lastDetachTimestamp:
        description: This is a default description.
        type: parameters
      licenses:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      options:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      sizeGb:
        description: This is a default description.
        type: parameters
      sourceImage:
        description: This is a default description.
        type: parameters
      sourceImageId:
        description: This is a default description.
        type: parameters
      sourceSnapshot:
        description: This is a default description.
        type: parameters
      sourceSnapshotId:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
      type:
        description: This is a default description.
        type: parameters
      users:
        description: This is a default description.
        type: parameters
      zone:
        description: This is a default description.
        type: parameters
  DiskAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  DiskList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  DiskMoveRequest:
    properties:
      destinationZone:
        description: This is a default description.
        type: parameters
      targetDisk:
        description: This is a default description.
        type: parameters
  DiskType:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      defaultDiskSizeGb:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      validDiskSize:
        description: This is a default description.
        type: parameters
      zone:
        description: This is a default description.
        type: parameters
  DiskTypeAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  DiskTypeList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  DiskTypesScopedList:
    properties:
      diskTypes:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  DisksResizeRequest:
    properties:
      sizeGb:
        description: This is a default description.
        type: parameters
  DisksScopedList:
    properties:
      disks:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  Firewall:
    properties:
      allowed:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      network:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      sourceRanges:
        description: This is a default description.
        type: parameters
      sourceTags:
        description: This is a default description.
        type: parameters
      targetTags:
        description: This is a default description.
        type: parameters
  FirewallList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  ForwardingRule:
    properties:
      IPAddress:
        description: This is a default description.
        type: parameters
      IPProtocol:
        description: This is a default description.
        type: parameters
      backendService:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      loadBalancingScheme:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      network:
        description: This is a default description.
        type: parameters
      portRange:
        description: This is a default description.
        type: parameters
      ports:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      subnetwork:
        description: This is a default description.
        type: parameters
      target:
        description: This is a default description.
        type: parameters
  ForwardingRuleAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  ForwardingRuleList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  ForwardingRulesScopedList:
    properties:
      forwardingRules:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  GuestOsFeature:
    properties:
      type:
        description: This is a default description.
        type: parameters
  HTTPHealthCheck:
    properties:
      host:
        description: This is a default description.
        type: parameters
      port:
        description: This is a default description.
        type: parameters
      portName:
        description: This is a default description.
        type: parameters
      proxyHeader:
        description: This is a default description.
        type: parameters
      requestPath:
        description: This is a default description.
        type: parameters
      checkIntervalSec:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      healthyThreshold:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      timeoutSec:
        description: This is a default description.
        type: parameters
      unhealthyThreshold:
        description: This is a default description.
        type: parameters
  HTTPSHealthCheck:
    properties:
      host:
        description: This is a default description.
        type: parameters
      port:
        description: This is a default description.
        type: parameters
      portName:
        description: This is a default description.
        type: parameters
      proxyHeader:
        description: This is a default description.
        type: parameters
      requestPath:
        description: This is a default description.
        type: parameters
      checkIntervalSec:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      healthyThreshold:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      timeoutSec:
        description: This is a default description.
        type: parameters
      unhealthyThreshold:
        description: This is a default description.
        type: parameters
  HealthCheck:
    properties:
      checkIntervalSec:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      healthyThreshold:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      timeoutSec:
        description: This is a default description.
        type: parameters
      type:
        description: This is a default description.
        type: parameters
      unhealthyThreshold:
        description: This is a default description.
        type: parameters
  HealthCheckList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  HealthCheckReference:
    properties:
      healthCheck:
        description: This is a default description.
        type: parameters
  HealthStatus:
    properties:
      healthState:
        description: This is a default description.
        type: parameters
      instance:
        description: This is a default description.
        type: parameters
      ipAddress:
        description: This is a default description.
        type: parameters
      port:
        description: This is a default description.
        type: parameters
  HostRule:
    properties:
      description:
        description: This is a default description.
        type: parameters
      hosts:
        description: This is a default description.
        type: parameters
      pathMatcher:
        description: This is a default description.
        type: parameters
  HttpHealthCheckList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  HttpsHealthCheckList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  Image:
    properties:
      archiveSizeBytes:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      diskSizeGb:
        description: This is a default description.
        type: parameters
      family:
        description: This is a default description.
        type: parameters
      guestOsFeatures:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      licenses:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      rawDisk:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      sourceDisk:
        description: This is a default description.
        type: parameters
      sourceDiskId:
        description: This is a default description.
        type: parameters
      sourceType:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
  ImageList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  Instance:
    properties:
      canIpForward:
        description: This is a default description.
        type: parameters
      cpuPlatform:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      disks:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      machineType:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      networkInterfaces:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      serviceAccounts:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
      statusMessage:
        description: This is a default description.
        type: parameters
      zone:
        description: This is a default description.
        type: parameters
  InstanceAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  InstanceGroup:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      fingerprint:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      namedPorts:
        description: This is a default description.
        type: parameters
      network:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      size:
        description: This is a default description.
        type: parameters
      subnetwork:
        description: This is a default description.
        type: parameters
      zone:
        description: This is a default description.
        type: parameters
  InstanceGroupAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  InstanceGroupList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  InstanceGroupManager:
    properties:
      baseInstanceName:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      fingerprint:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      instanceGroup:
        description: This is a default description.
        type: parameters
      instanceTemplate:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      namedPorts:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      targetPools:
        description: This is a default description.
        type: parameters
      targetSize:
        description: This is a default description.
        type: parameters
      zone:
        description: This is a default description.
        type: parameters
  InstanceGroupManagerActionsSummary:
    properties:
      abandoning:
        description: This is a default description.
        type: parameters
      creating:
        description: This is a default description.
        type: parameters
      creatingWithoutRetries:
        description: This is a default description.
        type: parameters
      deleting:
        description: This is a default description.
        type: parameters
      none:
        description: This is a default description.
        type: parameters
      recreating:
        description: This is a default description.
        type: parameters
      refreshing:
        description: This is a default description.
        type: parameters
      restarting:
        description: This is a default description.
        type: parameters
  InstanceGroupManagerAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  InstanceGroupManagerList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  InstanceGroupManagersAbandonInstancesRequest:
    properties:
      instances:
        description: This is a default description.
        type: parameters
  InstanceGroupManagersDeleteInstancesRequest:
    properties:
      instances:
        description: This is a default description.
        type: parameters
  InstanceGroupManagersListManagedInstancesResponse:
    properties:
      managedInstances:
        description: This is a default description.
        type: parameters
  InstanceGroupManagersRecreateInstancesRequest:
    properties:
      instances:
        description: This is a default description.
        type: parameters
  InstanceGroupManagersScopedList:
    properties:
      instanceGroupManagers:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  InstanceGroupManagersSetInstanceTemplateRequest:
    properties:
      instanceTemplate:
        description: This is a default description.
        type: parameters
  InstanceGroupManagersSetTargetPoolsRequest:
    properties:
      fingerprint:
        description: This is a default description.
        type: parameters
      targetPools:
        description: This is a default description.
        type: parameters
  InstanceGroupsAddInstancesRequest:
    properties:
      instances:
        description: This is a default description.
        type: parameters
  InstanceGroupsListInstances:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  InstanceGroupsListInstancesRequest:
    properties:
      instanceState:
        description: This is a default description.
        type: parameters
  InstanceGroupsRemoveInstancesRequest:
    properties:
      instances:
        description: This is a default description.
        type: parameters
  InstanceGroupsScopedList:
    properties:
      instanceGroups:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  InstanceGroupsSetNamedPortsRequest:
    properties:
      fingerprint:
        description: This is a default description.
        type: parameters
      namedPorts:
        description: This is a default description.
        type: parameters
  InstanceList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  InstanceMoveRequest:
    properties:
      destinationZone:
        description: This is a default description.
        type: parameters
      targetInstance:
        description: This is a default description.
        type: parameters
  InstanceProperties:
    properties:
      canIpForward:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      disks:
        description: This is a default description.
        type: parameters
      machineType:
        description: This is a default description.
        type: parameters
      networkInterfaces:
        description: This is a default description.
        type: parameters
      serviceAccounts:
        description: This is a default description.
        type: parameters
  InstanceReference:
    properties:
      instance:
        description: This is a default description.
        type: parameters
  InstanceTemplate:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  InstanceTemplateList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  InstanceWithNamedPorts:
    properties:
      instance:
        description: This is a default description.
        type: parameters
      namedPorts:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
  InstancesScopedList:
    properties:
      instances:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  InstancesSetMachineTypeRequest:
    properties:
      machineType:
        description: This is a default description.
        type: parameters
  InstancesSetServiceAccountRequest:
    properties:
      email:
        description: This is a default description.
        type: parameters
      scopes:
        description: This is a default description.
        type: parameters
  InstancesStartWithEncryptionKeyRequest:
    properties:
      disks:
        description: This is a default description.
        type: parameters
  License:
    properties:
      chargesUseFee:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  MachineType:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      guestCpus:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      imageSpaceGb:
        description: This is a default description.
        type: parameters
      isSharedCpu:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      maximumPersistentDisks:
        description: This is a default description.
        type: parameters
      maximumPersistentDisksSizeGb:
        description: This is a default description.
        type: parameters
      memoryMb:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      scratchDisks:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      zone:
        description: This is a default description.
        type: parameters
  MachineTypeAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  MachineTypeList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  MachineTypesScopedList:
    properties:
      machineTypes:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  ManagedInstance:
    properties:
      currentAction:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      instance:
        description: This is a default description.
        type: parameters
      instanceStatus:
        description: This is a default description.
        type: parameters
  ManagedInstanceLastAttempt:
    properties:
      errors:
        description: This is a default description.
        type: parameters
  Metadata:
    properties:
      fingerprint:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
  NamedPort:
    properties:
      name:
        description: This is a default description.
        type: parameters
      port:
        description: This is a default description.
        type: parameters
  Network:
    properties:
      IPv4Range:
        description: This is a default description.
        type: parameters
      autoCreateSubnetworks:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      gatewayIPv4:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      subnetworks:
        description: This is a default description.
        type: parameters
  NetworkInterface:
    properties:
      accessConfigs:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      network:
        description: This is a default description.
        type: parameters
      networkIP:
        description: This is a default description.
        type: parameters
      subnetwork:
        description: This is a default description.
        type: parameters
  NetworkList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  Operation:
    properties:
      clientOperationId:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      endTime:
        description: This is a default description.
        type: parameters
      error:
        description: This is a default description.
        type: parameters
      httpErrorMessage:
        description: This is a default description.
        type: parameters
      httpErrorStatusCode:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      insertTime:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      operationType:
        description: This is a default description.
        type: parameters
      progress:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      startTime:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
      statusMessage:
        description: This is a default description.
        type: parameters
      targetId:
        description: This is a default description.
        type: parameters
      targetLink:
        description: This is a default description.
        type: parameters
      user:
        description: This is a default description.
        type: parameters
      warnings:
        description: This is a default description.
        type: parameters
      zone:
        description: This is a default description.
        type: parameters
  OperationAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  OperationList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  OperationsScopedList:
    properties:
      operations:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  PathMatcher:
    properties:
      defaultService:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      pathRules:
        description: This is a default description.
        type: parameters
  PathRule:
    properties:
      paths:
        description: This is a default description.
        type: parameters
      service:
        description: This is a default description.
        type: parameters
  Project:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      defaultServiceAccount:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      enabledFeatures:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      quotas:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  Quota:
    properties:
      limit:
        description: This is a default description.
        type: parameters
      metric:
        description: This is a default description.
        type: parameters
      usage:
        description: This is a default description.
        type: parameters
  Region:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      quotas:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
      zones:
        description: This is a default description.
        type: parameters
  RegionAutoscalerList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupManagerList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupManagersAbandonInstancesRequest:
    properties:
      instances:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupManagersDeleteInstancesRequest:
    properties:
      instances:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupManagersListInstancesResponse:
    properties:
      managedInstances:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupManagersRecreateRequest:
    properties:
      instances:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupManagersSetTargetPoolsRequest:
    properties:
      fingerprint:
        description: This is a default description.
        type: parameters
      targetPools:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupManagersSetTemplateRequest:
    properties:
      instanceTemplate:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupsListInstances:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupsListInstancesRequest:
    properties:
      instanceState:
        description: This is a default description.
        type: parameters
      portName:
        description: This is a default description.
        type: parameters
  RegionInstanceGroupsSetNamedPortsRequest:
    properties:
      fingerprint:
        description: This is a default description.
        type: parameters
      namedPorts:
        description: This is a default description.
        type: parameters
  RegionList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  ResourceGroupReference:
    properties:
      group:
        description: This is a default description.
        type: parameters
  Route:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      destRange:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      network:
        description: This is a default description.
        type: parameters
      nextHopGateway:
        description: This is a default description.
        type: parameters
      nextHopInstance:
        description: This is a default description.
        type: parameters
      nextHopIp:
        description: This is a default description.
        type: parameters
      nextHopNetwork:
        description: This is a default description.
        type: parameters
      nextHopVpnTunnel:
        description: This is a default description.
        type: parameters
      priority:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      tags:
        description: This is a default description.
        type: parameters
      warnings:
        description: This is a default description.
        type: parameters
  RouteList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  Router:
    properties:
      bgpPeers:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      interfaces:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      network:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  RouterAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  RouterBgp:
    properties:
      asn:
        description: This is a default description.
        type: parameters
  RouterBgpPeer:
    properties:
      advertisedRoutePriority:
        description: This is a default description.
        type: parameters
      interfaceName:
        description: This is a default description.
        type: parameters
      ipAddress:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      peerAsn:
        description: This is a default description.
        type: parameters
      peerIpAddress:
        description: This is a default description.
        type: parameters
  RouterInterface:
    properties:
      ipRange:
        description: This is a default description.
        type: parameters
      linkedVpnTunnel:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
  RouterList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  RouterStatus:
    properties:
      bestRoutes:
        description: This is a default description.
        type: parameters
      bgpPeerStatus:
        description: This is a default description.
        type: parameters
      network:
        description: This is a default description.
        type: parameters
  RouterStatusBgpPeerStatus:
    properties:
      advertisedRoutes:
        description: This is a default description.
        type: parameters
      ipAddress:
        description: This is a default description.
        type: parameters
      linkedVpnTunnel:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      numLearnedRoutes:
        description: This is a default description.
        type: parameters
      peerIpAddress:
        description: This is a default description.
        type: parameters
      state:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
      uptime:
        description: This is a default description.
        type: parameters
      uptimeSeconds:
        description: This is a default description.
        type: parameters
  RouterStatusResponse:
    properties:
      kind:
        description: This is a default description.
        type: parameters
  RoutersPreviewResponse:
    properties: []
  RoutersScopedList:
    properties:
      routers:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  SSLHealthCheck:
    properties:
      port:
        description: This is a default description.
        type: parameters
      portName:
        description: This is a default description.
        type: parameters
      proxyHeader:
        description: This is a default description.
        type: parameters
      request:
        description: This is a default description.
        type: parameters
      response:
        description: This is a default description.
        type: parameters
  Scheduling:
    properties:
      automaticRestart:
        description: This is a default description.
        type: parameters
      onHostMaintenance:
        description: This is a default description.
        type: parameters
      preemptible:
        description: This is a default description.
        type: parameters
  SerialPortOutput:
    properties:
      contents:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      next:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      start:
        description: This is a default description.
        type: parameters
  ServiceAccount:
    properties:
      email:
        description: This is a default description.
        type: parameters
      scopes:
        description: This is a default description.
        type: parameters
  Snapshot:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      diskSizeGb:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      licenses:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      sourceDisk:
        description: This is a default description.
        type: parameters
      sourceDiskId:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
      storageBytes:
        description: This is a default description.
        type: parameters
      storageBytesStatus:
        description: This is a default description.
        type: parameters
  SnapshotList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  SslCertificate:
    properties:
      certificate:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      privateKey:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  SslCertificateList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  Subnetwork:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      gatewayAddress:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      ipCidrRange:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      network:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  SubnetworkAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  SubnetworkList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  SubnetworksExpandIpCidrRangeRequest:
    properties:
      ipCidrRange:
        description: This is a default description.
        type: parameters
  SubnetworksScopedList:
    properties:
      subnetworks:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  TCPHealthCheck:
    properties:
      port:
        description: This is a default description.
        type: parameters
      portName:
        description: This is a default description.
        type: parameters
      proxyHeader:
        description: This is a default description.
        type: parameters
      request:
        description: This is a default description.
        type: parameters
      response:
        description: This is a default description.
        type: parameters
  Tags:
    properties:
      fingerprint:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
  TargetHttpProxy:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      urlMap:
        description: This is a default description.
        type: parameters
  TargetHttpProxyList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  TargetHttpsProxiesSetSslCertificatesRequest:
    properties:
      sslCertificates:
        description: This is a default description.
        type: parameters
  TargetHttpsProxy:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      sslCertificates:
        description: This is a default description.
        type: parameters
      urlMap:
        description: This is a default description.
        type: parameters
  TargetHttpsProxyList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  TargetInstance:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      instance:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      natPolicy:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      zone:
        description: This is a default description.
        type: parameters
  TargetInstanceAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  TargetInstanceList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  TargetInstancesScopedList:
    properties:
      targetInstances:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  TargetPool:
    properties:
      backupPool:
        description: This is a default description.
        type: parameters
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      failoverRatio:
        description: This is a default description.
        type: parameters
      healthChecks:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      instances:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      sessionAffinity:
        description: This is a default description.
        type: parameters
  TargetPoolAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  TargetPoolInstanceHealth:
    properties:
      healthStatus:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
  TargetPoolList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  TargetPoolsAddHealthCheckRequest:
    properties:
      healthChecks:
        description: This is a default description.
        type: parameters
  TargetPoolsAddInstanceRequest:
    properties:
      instances:
        description: This is a default description.
        type: parameters
  TargetPoolsRemoveHealthCheckRequest:
    properties:
      healthChecks:
        description: This is a default description.
        type: parameters
  TargetPoolsRemoveInstanceRequest:
    properties:
      instances:
        description: This is a default description.
        type: parameters
  TargetPoolsScopedList:
    properties:
      targetPools:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  TargetReference:
    properties:
      target:
        description: This is a default description.
        type: parameters
  TargetSslProxiesSetBackendServiceRequest:
    properties:
      service:
        description: This is a default description.
        type: parameters
  TargetSslProxiesSetProxyHeaderRequest:
    properties:
      proxyHeader:
        description: This is a default description.
        type: parameters
  TargetSslProxiesSetSslCertificatesRequest:
    properties:
      sslCertificates:
        description: This is a default description.
        type: parameters
  TargetSslProxy:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      proxyHeader:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      service:
        description: This is a default description.
        type: parameters
      sslCertificates:
        description: This is a default description.
        type: parameters
  TargetSslProxyList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  TargetVpnGateway:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      forwardingRules:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      network:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
      tunnels:
        description: This is a default description.
        type: parameters
  TargetVpnGatewayAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  TargetVpnGatewayList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  TargetVpnGatewaysScopedList:
    properties:
      targetVpnGateways:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  TestFailure:
    properties:
      actualService:
        description: This is a default description.
        type: parameters
      expectedService:
        description: This is a default description.
        type: parameters
      host:
        description: This is a default description.
        type: parameters
      path:
        description: This is a default description.
        type: parameters
  UrlMap:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      defaultService:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      fingerprint:
        description: This is a default description.
        type: parameters
      hostRules:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      pathMatchers:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      tests:
        description: This is a default description.
        type: parameters
  UrlMapList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  UrlMapReference:
    properties:
      urlMap:
        description: This is a default description.
        type: parameters
  UrlMapTest:
    properties:
      description:
        description: This is a default description.
        type: parameters
      host:
        description: This is a default description.
        type: parameters
      path:
        description: This is a default description.
        type: parameters
      service:
        description: This is a default description.
        type: parameters
  UrlMapValidationResult:
    properties:
      loadErrors:
        description: This is a default description.
        type: parameters
      loadSucceeded:
        description: This is a default description.
        type: parameters
      testFailures:
        description: This is a default description.
        type: parameters
      testPassed:
        description: This is a default description.
        type: parameters
  UrlMapsValidateRequest:
    properties: []
  UrlMapsValidateResponse:
    properties: []
  UsageExportLocation:
    properties:
      bucketName:
        description: This is a default description.
        type: parameters
      reportNamePrefix:
        description: This is a default description.
        type: parameters
  VpnTunnel:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      detailedStatus:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      ikeVersion:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      localTrafficSelector:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      peerIp:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      remoteTrafficSelector:
        description: This is a default description.
        type: parameters
      router:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      sharedSecret:
        description: This is a default description.
        type: parameters
      sharedSecretHash:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
      targetVpnGateway:
        description: This is a default description.
        type: parameters
  VpnTunnelAggregatedList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  VpnTunnelList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
  VpnTunnelsScopedList:
    properties:
      vpnTunnels:
        description: This is a default description.
        type: parameters
      warning:
        description: This is a default description.
        type: parameters
  Zone:
    properties:
      creationTimestamp:
        description: This is a default description.
        type: parameters
      description:
        description: This is a default description.
        type: parameters
      id:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      name:
        description: This is a default description.
        type: parameters
      region:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters
      status:
        description: This is a default description.
        type: parameters
  ZoneList:
    properties:
      id:
        description: This is a default description.
        type: parameters
      items:
        description: This is a default description.
        type: parameters
      kind:
        description: This is a default description.
        type: parameters
      nextPageToken:
        description: This is a default description.
        type: parameters
      selfLink:
        description: This is a default description.
        type: parameters